1. List all the columns of the Salespeople table.
Ans:- describe salespeople;

2. List all customers with a rating of 100.
Ans:- select * from customer where rating=100;

3. Find all records in the Customer table with NULL values in the city column.
Ans:- select * from customer where city = null;

4. Find the largest order taken by each salesperson on each date.
Ans:- 
First:-
select a.snum, a.sname,c.odate, c.amt from salespeople a, customer b, orders c where a.snum = b.snum and b.cnum=c.cnum;
Second:- 
select a.snum, a.sname, c.odate, max(c.amt) from salespeople a, customer b, orders c where a.snum=b.snum and b.cnum=c.cnum group by a.snum, a.sname, c.odate;

5. Arrange the Orders table by descending customer number.
Ans:- select * from orders order by cnum  desc;

6. Find which salespeople currently have orders in the Orders table.
Ans:- select a.snum, a.sname,c.onum  FROM salespeople a, customer b, orders c where a.snum = b.snum and b.cnum = c.cnum;

7. List names of all customers matched with the salespeople serving them.
Ans:-select a.snum,a.sname, b.cname FROM salespeople a, customer b where a.snum=b.snum;

8. Find the names and numbers of all salespeople who had more than one customer.
Ans:- select a.snum, a.sname from salespeople a where 1<(select count(*) from customer b where a.snum=b.snum);

9. Count the orders of each of the salespeople and output the results in descending order.
Ans:- select a.snum, b.cnum, count(c.onum) from salespeople a, customer b, orders c where a.snum=b.snum and b.cnum=c.cnum group by a.snum,b.cnum order by a.snum desc;

10. List the Customer table if and only if one or more of the customers in the Customer table are located in San Jose.
Ans:- select * from customer where city = 'San Jose';

11. Match salespeople to customers according to what city they lived in.
Ans:- select a.snum,a.sname, b.cname, b.city  from salespeople a, customer b where a.city= b.city;

12. Find the largest order taken by each salesperson.
Ans:- select a.snum,a.sname, max(c.amt) from salespeople a, customer b, orders c where a.snum=b.snum and b.cnum=c.cnum group by a.snum, a.sname;

13. Find customers in San Jose who have a rating above 200.
Ans:- select * from customer where rating>200 and city='San Jose';

14. List the names and commissions of all salespeople in London.
Ans:- select sname, comm from salespeople where city='London';

15. List all the orders of salesperson Motika from the Orders table.
Ans:- select a.snum, a.sname, c.onum from salespeople a, customer b, orders c where a.snum=b.snum and b.cnum=c.cnum and a.sname='Motika';

16. Find all customers with orders on October 3.
Ans:- select a.cnum, a.cname,b.onum, b.odate from customer a, orders b where a.cnum=b.cnum and odate='1996-10-03';

17. Give the sums of the amounts from the Orders table, grouped by date, eliminating all those
dates where the SUM was not at least 2000.00 above the MAX amount.
Ans:- SELECT odate, SUM(amt) FROM orders a GROUP BY odate HAVING SUM(amt) > (SELECT 2000.00 + MAX(amt)  FROM orders b WHERE a.odate = b.odate);

18. Select all orders that had amounts that were greater than at least one of the orders from October 6.
Ans:- Select * from orders where odate != '1996-10-06' and amt > ( select min(amt) from orders where odate = '1996-10-06');

19. Write a query that uses the EXISTS operator to extract all salespeople who have customers with a rating of 300.
Ans:- select a.snum,a.sname from salespeople a where exists (select cname from customer  where snum=a.snum and rating=300);

20. Find all pairs of customers having the same rating.
Ans:- select a.cname, b.cname, b.rating from customer a, customer b where a.rating=b.rating and a.cnum!=b.cnum;

21. Find all customers whose CNUM is 1000 above the SNUM of Serres.
Ans:-  select cnum, cname from customer where cnum>(select snum+1000 from salespeople where sname='Serres');

22. Give the salespeople’s commissions as percentages instead of decimal numbers.
Ans:- select comm*100 from salespeople;

23. Find the largest order taken by each salesperson on each date, eliminating those MAX orders which are less than $3000.00 in value.
Ans:-  select a.snum, c.odate, max(c.amt) from salespeople a, customer b,orders c where a.snum=b.snum and b.cnum=c.cnum and c.amt > 3000 group by a.snum,c.odate order by a.snum,c.odate;

24. List the largest orders for October 3, for each salesperson.
Ans:- select a.snum, a.sname,c.odate, max(c.amt) from salespeople a, customer b, orders c where a.snum=b.snum and b.cnum=c.cnum and odate='1996-10-03' group by a.snum,c.odate;

25. Find all customers located in cities where Serres (SNUM 1002) has customers.
Ans:- select a.snum, a.sname, b.city from salespeople a, customer b where a.snum=b.snum and a.snum=1002


26. Select all customers with a rating above 200.00.
Ans:- select * from customer where rating>200;

27. Count the number of salespeople currently listing orders in the Orders table.
Ans:- 
Count the number orders of each salespeople:- select a.snum, a.sname, count(c.onum) from salespeople a, customer b, orders c where a.snum=b.snum and b.cnum=c.cnum group by a.snum, a.sname;
Count the number of salespeople listing in orders:- select count(distinct a.snum) from salespeople a, customer b, orders c where a.snum=b.snum and b.cnum=c.cnum;

28. Write a query that produces all customers serviced by salespeople with a commission above 12%. Output the customer’s name and the salesperson’s rate of commission.
Ans:- select b.cname, a.sname, a.comm*100 from customer b, salespeople a where a.snum=b.snum and a.comm*100 > 12;

29. Find salespeople who have multiple customers.
Ans:- select snum from customer group by snum having count(*) > 1;

30. Find salespeople with customers located in their city.
Ans:- select a.sname from salespeople a where a.snum in (select b.snum from customer b  where a.city = b.city and a.snum=b.snum);

31. Find all salespeople whose name starts with ‘P’ and the fourth character is ‘l’.
Ans:- select * from salespeople where sname LIKE 'P__l'; jm

32. Write a query that uses a subquery to obtain all orders for the customer named Cisneros.
Assume you do not know his customer number.
Ans:- select onum,odate from orders where cnum= (select cnum from customer where cname='Cisneros');

33. Find the largest orders for Serres and Rifkin.
Ans:-  select a.snum,a.sname,max(c.amt) from salespeople a, customer b,orders  c where a.snum=b.snum and b.cnum=c.cnum group by a.snum,a.sname having a.sname ='Serres' or a.sname='Rifkin' ;

34. Extract the Salespeople table in the following order : SNUM, SNAME, COMMISSION, CITY.
Ans:- select snum, sname, comm, city from salespeople;

35. Select all customers whose names fall in between ‘A’ and ‘G’ alphabetical range.
Ans:- select * from customer where cname BETWEEN 'A' and 'G' ORDER BY cname;

36. Select all the possible combinations of customers that you can assign.
Ans:- select a.snum, a.sname,b.cnum, b.cname, c.onum from salespeople a, customer b, orders c where a.snum=b.snum and b.cnum=c.cnum;

37. Select all orders that are greater than the average for October 4.
Ans:- select * from orders where amt > (select avg(amt) from orders where odate='1996-10-04');

38. Write a select command using a corelated subquery that selects the names and numbers of all
customers with ratings equal to the maximum for their city.
Ans:- select a.cnum,a.cname from customer a where a.rating=(select max(b.rating) from customer b where a.city=b.city);

39. Write a query that totals the orders for each day and places the results in descending order.
Ans:-mysql> select odate, count(onum) from orders group by odate order by count(onum) desc;

40. Write a select command that produces the rating followed by the name of each customer in San Jose.
Ans:- select cname, rating, city from customer where city= 'San Jose';

41. Find all orders with amounts smaller than any amount for a customer in San Jose.
Ans:- select * from orders where amt < any (select amt from orders, customer where customer.city='San Jose' and orders.cnum=customer.cnum);

42. Find all orders with above average amounts for their customers.
Ans:- select * from orders a where amt > (select avg(amt) from orders b where b.cnum=a.cnum );

43. Write a query that selects the highest rating in each city.
Ans:- select city max(rating) from customer group by city;

44. Write a query that calculates the amount of the salesperson’s commission on each order by a customer with a rating above 100.00.
Ans:- select sname, amt * comm   FROM salespeople JOIN customer using(snum) JOIN orders using(cnum) WHERE rating>100;
						OR
Select sname, amt * comm from orders, customer, salespeople where rating > 100 and salespeople.snum = customer.snum and customer.cnum = orders.cnum;

45. Count the customers with ratings above San Jose’s average.
Ans:- select cname, rating from customer where rating > (select avg(rating) from customer where city='San Jose');

46. Write a query that produces all pairs of salespeople with themselves as well as duplicate rows with the order reversed.
Ans:-  select *  from salespeople a, salespeople b where a.snum > b.snum;

47. Find all salespeople that are located in either Barcelona or London.
Ans:- select * from salespeople where city='Barcelona' OR city = 'London';

48. Find all salespeople with only one customer.
Ans:- select snum, count(*) 'customerCount' from customer group by snum having customerCount = 1;

49. Write a query that joins the Customer table to itself to find all pairs of customers served by a single salesperson.
Ans:- select snum,cname from customer where snum in (select snum from customer group by snum having count(snum) > 1);
 
50. Write a query that will give you all orders for more than $1000.00
Ans:- select * from orders where amt>1000.00;

51. Write a query that lists each order number followed by the name of the customer who made that order.
Ans:- select onum, cname from customer JOIN orders using(cnum);

52. Write 2 queries that select all salespeople (by name and number) who have customers in their cities who they do not service, 
one using a join and one a corelated subquery. Which solution is more elegant?
Ans:- 
Using JOIN:- select distinct cname from customer a, salespeople b where a.city = b.city and a.snum != b.snum;

Using Subquery:- select cname from customer where cname in (select cname from customer a, salespeople b where a.city=b.city and a.snum != b.snum);

53. Write a query that selects all customers whose ratings are equal to or greater than ANY (in the SQL sense) of Serres’?
Ans:- select * from customer where rating >= ANY (select rating from customer where snum = (select snum from salespeople where sname = 'Serres'));

54. Write 2 queries that will produce all orders taken on October 3 or October 4.
Ans:- select * from orders where odate='1996-10-03' OR odate='1996-10-04';
				OR
      select * from orders where odate in ('1996-10-03','1996-10-04');
 
55. Write a query that produces all pairs of orders by a given customer. Name that customer and eliminate duplicates.
Ans:- select c.cname, a.onum, b.onum from orders a, orders b, customer c where a.cnum = b.cnum and c.cnum = a.cnum and a.onum > b.onum;

56. Find only those customers whose ratings are higher than every customer in Rome.
Ans:- select * from customer where rating > (select max(rating) from customer where city='Rome');

57. Write a query on the Customers table whose output will exclude all customers with a rating <=100.00, unless they are located in Rome.
Ans:- select * from customer where rating <=100 OR city = 'Rome';

58. Find all rows from the Customers table for which the salesperson number is 1001.
Ans:- select * from customer where snum=1001;

59. Find the total amount in Orders for each salesperson for whom this total is greater than the amount of the largest order in the table.
Ans:- select a.snum,a.sname, sum(c.amt) from salespeople a, customer b, orders c where a.snum=b.snum and b.cnum=c.cnum group by snum,sname having sum(c.amt) > (select max(amt) from orders);

60. Write a query that selects all orders save those with zeroes or NULLs in the amount field.
Ans:- select * from orders where amt != null OR amt !=0;

61. Produce all combinations of salespeople and customer names such that the former precedes the latter alphabetically, 
and the latter has a rating of less than 200.
Ans:- select b.sname, a.cname, a.rating from customer a, salespeople b where a.snum=b.snum and a.rating < 200 and b.sname < a.cname;

62. List all Salespeople’s names and the Commission they have earned.
Ans:- select a.snum,a.sname, sum(c.amt*a.comm) 'Total amt' from salespeople a, customer b, orders c where a.snum=b.snum and b.cnum=c.cnum group by snum,sname;

63. Write a query that produces the names and cities of all customers with the same rating as Hoffman. Write the query using 
Hoffman’s CNUM rather than his rating, so that it would still be usable if his rating changed.
Ans:-select cname, city from customer where rating = (select rating from customer where cname='Hoffman') and cname != 'Hoffman';

64. Find all salespeople for whom there are customers that follow them in alphabetical order.
Ans:- select sname from salespeople where sname < any ( select cname from customer where salespeople.snum = customer.snum);
						OR
select sname from salespeople where exists ( select cname from customer where salespeople.snum = customer.snum and salespeople.sname < customer.cname);

65. Write a query that produces the names and ratings of all customers of all who have above average orders.
Ans:- select distinct(b.cname), b.rating from orders a, customer b where a.cnum=b.cnum and a.amt > (select avg(amt) from orders); 
					OR
select cname, rating from customer where cnum  IN (select cnum from orders where amt > (select avg(cnum) from orders));

66. Find the SUM of all purchases from the Orders table.
Ans:- select sum(amt) from orders;

67. Write a SELECT command that produces the order number, amount and date for all rows in the order table.
Ans:- select onum,amt,odate from orders;

68. Count the number of nonNULL rating fields in the Customers table (including repeats).
Ans:- select count(cnum) from customer where rating is not null;

69. Write a query that gives the names of both the salesperson and the customer for each order after the order number.
Ans:- select c.onum, a.sname, b.cname from salespeople a, customer b, orders c where a.snum=b.snum and b.cnum=c.cnum;

70. List the commissions of all salespeople servicing customers in London.
Ans:- select a.sname, a.comm from salespeople a where snum in (select snum from customer  where city='London');

71. Write a query using ANY or ALL that will find all salespeople who have no customers located in their city.
Ans:- select snum,sname,city from salespeople where snum in (select snum from customer where salespeople.city != customer.city and salespeople.snum=customer.snum);
 						OR
select snum,sname, city from salespeople where snum = any ( select snum from customer where salespeople.city != customer.city and salespeople.snum = customer.snum);

72. Write a query using the EXISTS operator that selects all salespeople with customers located in their cities who are not assigned to them.
Ans:- select * from salespeople a where exists (select * from customer b where a.city=b.city and a.snum != b.snum);

73. Write a query that selects all customers serviced by Peel or Motika. (Hint : The SNUM field relates the two tables to one another.)
Ans:- select a.snum,a.sname,b.cname from salespeople a, customer b where a.snum=b.snum and a.sname in ('Peel','Motika');

74. Count the number of salespeople registering orders for each day. (If a salesperson has more than one order on a given day,
 he or she should be counted only once.)
Ans:- select a.odate, count(distinct(b.snum)) from orders a, customer b where a.cnum=b.cnum group by a.odate;

75. Find all orders attributed to salespeople in London.
Ans:- select a.snum,a.sname, a.city,c.onum from salespeople a, customer b, orders c where a.snum=b.snum and b.cnum=c.cnum and a.city='London';

76. Find all orders by customers not located in the same cities as their salespeople.
Ans:- select a.sname, a.city,b.cname,b.city,c.onum from salespeople a, customer b, orders c where a.snum=b.snum and b.cnum=c.cnum and a.city !=b.city;

77. Find all salespeople who have customers with more than one current order.
Ans:- select distinct(a.snum),a.sname from salespeople a, customer b, orders c where a.snum=b.snum and b.cnum=c.cnum group by b.cnum having count(*) >1;
 
78. Write a query that extracts from the Customers table every customer assigned to a salesperson who currently has at least one other customer (besides the customer being selected) with orders in the Orders table.
Ans:- select a.cnum, b.onum from customer a, orders b where a.cnum=b.cnum and (select count(*) from salespeople c, customer d where c.snum=d.snum  and c.snum=a.snum group by c.snum having count(*) > 1);

79. Write a query that selects all customers whose names begin with ‘C’.
Ans:- select cnum,cname from customer where cname like 'C%'; 

80. Write a query on the Customers table that will find the highest rating in each city. Put the output in this form : for the city (city) 
the highest rating is : (rating).
Ans:- select city, max(rating) from customer group by city;

81. Write a query that will produce the SNUM values of all salespeople with orders currently in the Orders table (without any repeats).
Ans:- select distinct(a.snum) from customer a, orders b where a.cnum=b.cnum;

82. Write a query that lists customers in descending order of rating. Output the rating field first, followed by 
the customer’s names and numbers.
Ans:- select rating, cname, cnum from customer order by rating desc;

83. Find the average commission for salespeople in London.
Ans:- select avg(comm) from salespeople where city='London';

84. Find all orders credited to the same salesperson who services Hoffman (CNUM 2001).
Ans:- select b.onum,b.odate,b.amt,b.cnum from customer a, orders b where a.cnum=b.cnum and a.snum = (select snum from customer c where c.cnum=2001); 

85. Find all salespeople whose commission is in between 0.10 and 0.12 (both inclusive).
Ans:- select * from salespeople where comm >= 0.10 and comm =< 0.12; 
				OR
	select * from salespeople where comm between 0.10 and 0.12;

86. Write a query that will give you the names and cities of all salespeople in London with a commission above 0.10.
Ans:- select sname, city from salespeople where city='London' and comm > 0.10;

------------------------------------------------------------------------------------------------------------------------------------------------
87. What will be the output from the following query?
SELECT * FROM ORDERS
where (amt < 1000 OR NOT (odate = 10/03/1996 AND cnum >
2003));
Ans:- select * from orders where (amt < 1000 OR NOT (odate = '1996-10-03' AND cnum > 2003));

mysql> select * from orders;
+------+---------+------------+------+
| onum | amt     | odate      | cnum |
+------+---------+------------+------+
| 3001 |   18.69 | 1996-10-03 | 2008 |
| 3002 | 1900.10 | 1996-10-03 | 2007 |
| 3003 |  767.19 | 1996-10-03 | 2001 |
| 3005 | 5160.45 | 1996-10-03 | 2003 |
| 3006 | 1098.16 | 1996-10-03 | 2008 |
| 3007 |   75.75 | 1996-10-04 | 2002 |
| 3008 | 4723.00 | 1996-10-05 | 2006 |
| 3009 | 1713.23 | 1996-10-04 | 2002 |
| 3010 | 1309.95 | 1996-10-06 | 2004 |
| 3011 | 9891.88 | 1996-10-06 | 2006 |
+------+---------+------------+------+
10 rows in set (0.00 sec)

mysql> select * from orders where  (odate = '1996-10-03' AND cnum > 2003);  
+------+---------+------------+------+
| onum | amt     | odate      | cnum |
+------+---------+------------+------+
| 3001 |   18.69 | 1996-10-03 | 2008 |
| 3002 | 1900.10 | 1996-10-03 | 2007 |
| 3006 | 1098.16 | 1996-10-03 | 2008 |
+------+---------+------------+------+
3 rows in set (0.00 sec)

mysql> select * from orders where  NOT (odate = '1996-10-03' AND cnum > 2003);  
+------+---------+------------+------+
| onum | amt     | odate      | cnum |
+------+---------+------------+------+
| 3003 |  767.19 | 1996-10-03 | 2001 |
| 3005 | 5160.45 | 1996-10-03 | 2003 |
| 3007 |   75.75 | 1996-10-04 | 2002 |
| 3008 | 4723.00 | 1996-10-05 | 2006 |
| 3009 | 1713.23 | 1996-10-04 | 2002 |
| 3010 | 1309.95 | 1996-10-06 | 2004 |
| 3011 | 9891.88 | 1996-10-06 | 2006 |
+------+---------+------------+------+
7 rows in set (0.00 sec)

mysql> select * from orders where (amt < 1000 OR NOT (odate = '1996-10-03' AND cnum > 2003));
+------+---------+------------+------+
| onum | amt     | odate      | cnum |
+------+---------+------------+------+
| 3001 |   18.69 | 1996-10-03 | 2008 |
| 3003 |  767.19 | 1996-10-03 | 2001 |
| 3005 | 5160.45 | 1996-10-03 | 2003 |
| 3007 |   75.75 | 1996-10-04 | 2002 |
| 3008 | 4723.00 | 1996-10-05 | 2006 |
| 3009 | 1713.23 | 1996-10-04 | 2002 |
| 3010 | 1309.95 | 1996-10-06 | 2004 |
| 3011 | 9891.88 | 1996-10-06 | 2006 |
+------+---------+------------+------+
8 rows in set (0.00 sec)
-----------------------------------------------------------------------------------------------------------------------------------------------

88. Write a query that selects each customer’s smallest order.
Ans:- select a.cnum, a.cname, min(b.amt) from customer a, orders b where a.cnum=b.cnum group by cnum,cname;

89. Write a query that selects the first customer in alphabetical order whose name begins with G.
Ans:- select min(cname) from customer where cname LIKE 'G%';

90. Write a query that counts the number of different nonNULL city values in the Customers table.
Ans:- select count(distinct(city)) from customer where city is not Null;
			OR
	select count(distinct city) from customer;

